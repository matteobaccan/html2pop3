name: GraalVM Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: GitHub Action for GraalVM
        # You may pin to the exact commit or the version.
        # uses: graalvm/setup-graalvm@b8dc5fccfbc65b21dd26e8341e7b21c86547f61b
        uses: graalvm/setup-graalvm@v1
        with:
          # Java version. See examples of supported syntax in the README file.
          java-version: 17
          # GraalVM distribution. See the list of available distributions in the README file.
          distribution: 'graalvm' # optional, default is 
          # Comma-separated list of GraalVM components to be installed.
          # components: # optional, default is 
          # Set it to secrets.GITHUB_TOKEN to increase rate limits when accessing the GitHub API. Defaults to github.token.
          # github-token: # optional, default is ${{ github.token }}
          # Set $JAVA_HOME to the GraalVM installation. Default: true.
          # set-java-home: # optional, default is true
          # Name of the build platform to cache dependencies. It can be "maven", "gradle", or "sbt".
          # cache: # optional
          # Annotate jobs with update notifications, for example, when a new GraalVM release is available
          # check-for-updates: # optional, default is true
          # Set up musl for static image building with GraalVM Native Image.
          # native-image-musl: # optional, default is false
          # Post a job summary containing a Native Image build report.
          # native-image-job-reports: # optional, default is false
          # Post a comment containing a Native Image build report on pull requests.
          # native-image-pr-reports: # optional, default is false
          # GraalVM version (release, latest, dev).
          # version: # optional, default is 
          # Download token for the GraalVM Download Service. If provided, the action will set up GraalVM Enterprise Edition.
          # gds-token: # optional
          
#      - name: Setup GraalVM action
#        # You may pin to the exact commit or the version.
#        # uses: ayltai/setup-graalvm@eb0db9af1ceb6dadb398847c7e23fc3afa09c0d3
#        uses: ayltai/setup-graalvm@master
#        with:
#          # The JDK version to be installed with GraalVM. E.g. 8, 11. See https://github.com/graalvm/graalvm-ce-builds/releases
#          java-version: 11 # optional
#          # The version of GraalVM to make available on PATH. E.g. 20.1.0, 19.3.2. See https://github.com/graalvm/graalvm-ce-builds/releases
#          # Allineare la versione con pom.xml
#          graalvm-version: 21.3.0
#          # Install GraalVM Native Image
#          native-image: true # optional

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      - name: Windows msvc setup
        uses: ilammy/msvc-dev-cmd@v1.12.1
        if: ${{ matrix.os == 'windows-latest' }}

      - name: Windows msbuild setup
        uses: microsoft/setup-msbuild@v1
        if: ${{ matrix.os == 'windows-latest' }}

      - name: Call maven
        run: mvn --no-transfer-progress -B package --file pom.xml -DskipNativeVersion=false



      - name: Create release date
        if: ${{ matrix.os == 'windows-latest' }}
        id: read_release_win
        shell: bash
        run: |
          r=$(date "+%Y%m%d-%H%M%S")
          #echo "::set-output name=RELEASE_BODY::$r"
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT
          cd target
          ls
          zip html2pop3.zip html2pop3.exe *.dll

      - name: Upload Windows Binaries to Release
        if: ${{ matrix.os == 'windows-latest' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: release/windows/${{ steps.read_release_win.outputs.RELEASE_BODY }}
          file: target/html2pop3.zip
          asset_name: html2pop3-win32.zip
          body: |
            Rilascio Windows del ${{ steps.read_release_win.outputs.RELEASE_BODY }}

      - name: Create release date
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: read_release_linux
        shell: bash
        run: |
          r=$(date "+%Y%m%d-%H%M%S")
          #echo "::set-output name=RELEASE_BODY::$r"
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT

      - name: Upload Linux Binaries to Release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: release/linux/${{ steps.read_release_linux.outputs.RELEASE_BODY }}
          file: /home/runner/work/html2pop3/html2pop3/target/HTML2POP3
          asset_name: html2pop3
          body: |
            Rilascio Linux del ${{ steps.read_release_linux.outputs.RELEASE_BODY }}

      - name: Create release date
        if: ${{ matrix.os == 'macos-latest' }}
        id: read_release_mac
        shell: bash
        run: |
          r=$(date "+%Y%m%d-%H%M%S")
          #echo "::set-output name=RELEASE_BODY::$r"
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT


      - name: Upload Mac Binaries to Release
        if: ${{ matrix.os == 'macos-latest' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: release/mac/${{ steps.read_release_mac.outputs.RELEASE_BODY }}
          file: /Users/runner/work/html2pop3/html2pop3/target/HTML2POP3
          asset_name: html2pop3
          body: |
            Rilascio MacOS del ${{ steps.read_release_mac.outputs.RELEASE_BODY }}

#      - name: Push changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: ${{ github.ref }}
